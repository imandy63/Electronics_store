/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Oracle;
import java.sql.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import query.OracleSysQuery;
import query.PolicyQuery;
import utils.comboBoxHandler;
import utils.tableHandler;
/**
 *
 * @author Khang
 */
public class Policy extends javax.swing.JPanel {
    OracleSysQuery sys = new OracleSysQuery();
    PolicyQuery policy = new PolicyQuery();
    ResultSet rs = policy.getAllPolicies();
    /**
     * Creates new form Policy
     */
    public Policy() {
        initComponents();
        initial();
    }
    
    public void initial(){
        loadUser();
        cb_Type.addItem("All");
        cb_Type.addItem("Enabled");
        cb_Type.addItem("Log");
        cb_Type.setSelectedIndex(0);
        cb_Table.addItem("DEVICES");
        cb_Table.addItem("RECEIVED_BILLS");
        cb_Table.addItem("RECEIVED_BILL_DETAILS");
        cb_Table.addItem("ORDERS");
        cb_Table.addItem("ORDER_DETAILS");
        table_Policy.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }
    
    public void loadUser(){
        ResultSet loadUser = sys.getAllUsers();
        try{
            DefaultComboBoxModel cb_user = comboBoxHandler.populateData(loadUser,"USERNAME");
            cb_Username.setModel(cb_user);
        } catch(SQLException err){
            JOptionPane.showMessageDialog(this, "Can't load data");
        }
    }
    
    public void loadPolicy(ResultSet rs){
        try{
            DefaultTableModel model = tableHandler.buildTableModel(rs);
            table_Policy.setModel(model);
        } catch(SQLException | Error err){
            JOptionPane.showMessageDialog(this, "Can't load data");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table_Policy = new javax.swing.JTable();
        btn_Unapply = new javax.swing.JButton();
        btn_Apply = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cb_Username = new javax.swing.JComboBox<>();
        cb_Type = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cb_Table = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txt_Name = new javax.swing.JTextField();
        cb_Insert = new javax.swing.JCheckBox();
        cb_Select = new javax.swing.JCheckBox();
        cb_Update = new javax.swing.JCheckBox();
        cb_Delete = new javax.swing.JCheckBox();
        btn_Create = new javax.swing.JButton();
        btn_Delete = new javax.swing.JButton();

        table_Policy.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table_Policy);

        btn_Unapply.setText("Off");
        btn_Unapply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UnapplyActionPerformed(evt);
            }
        });

        btn_Apply.setText("On");
        btn_Apply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ApplyActionPerformed(evt);
            }
        });

        jLabel5.setText("User:");

        cb_Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_UsernameActionPerformed(evt);
            }
        });

        cb_Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_TypeActionPerformed(evt);
            }
        });

        jLabel3.setText("Table:");

        jLabel4.setText("Name:");

        cb_Insert.setText("INSERT");

        cb_Select.setText("SELECT");

        cb_Update.setText("UPDATE");

        cb_Delete.setText("DELETE");

        btn_Create.setText("CREATE");
        btn_Create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CreateActionPerformed(evt);
            }
        });

        btn_Delete.setText("DELETE");
        btn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cb_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(cb_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(btn_Unapply)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Apply, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_Table, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_Name)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cb_Insert)
                                    .addGap(18, 18, 18)
                                    .addComponent(cb_Select)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cb_Update)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cb_Delete))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_Create)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Delete)))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cb_Type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cb_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cb_Table, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_Insert)
                            .addComponent(cb_Select))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_Update)
                            .addComponent(cb_Delete))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_Create)
                            .addComponent(btn_Delete))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_Apply)
                            .addComponent(btn_Unapply))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cb_UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_UsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_UsernameActionPerformed

    private void cb_TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_TypeActionPerformed
        // TODO add your handling code here:
        int index = cb_Type.getSelectedIndex();
        switch(index){
            case 0 -> rs = policy.getAllPolicies();
            case 1 -> rs = policy.getAllEnabledPolicies();
            case 2 -> rs = policy.getAuditLog();
        }
        loadPolicy(rs);
    }//GEN-LAST:event_cb_TypeActionPerformed

    private void btn_ApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ApplyActionPerformed
        // TODO add your handling code here:
        String username = cb_Username.getSelectedItem().toString();
        int rowIndex = table_Policy.getSelectedRow();
        if(rowIndex>=0){
            if(cb_Type.getSelectedIndex() == 0){
                String policyName = table_Policy.getValueAt(rowIndex, 0).toString();
                boolean success = policy.ApplyPolicyToUser(policyName, username);
                if(success){
                    JOptionPane.showMessageDialog(this, "Successfully Apply");
                } else {
                    JOptionPane.showMessageDialog(this, "Failed");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please select All");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select policy");
        }
    }//GEN-LAST:event_btn_ApplyActionPerformed

    private void btn_UnapplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UnapplyActionPerformed
        // TODO add your handling code here:
        int rowIndex = table_Policy.getSelectedRow();
        if(rowIndex>=0){
            if(cb_Type.getSelectedIndex() == 1){
                String policyName = table_Policy.getValueAt(rowIndex, 1).toString();
                String username = table_Policy.getValueAt(rowIndex, 0).toString();
                boolean success = policy.UnapplyPolicyToUser(policyName, username);
                if(success){
                    JOptionPane.showMessageDialog(this, "Success");
                } else {
                    JOptionPane.showMessageDialog(this, "Failed");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please select Enabled");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select policy");
        }
    }//GEN-LAST:event_btn_UnapplyActionPerformed

    private void btn_CreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CreateActionPerformed
        // TODO add your handling code here:
        boolean insert = cb_Insert.isSelected();
        boolean select = cb_Select.isSelected();
        boolean update = cb_Update.isSelected();
        boolean delete = cb_Delete.isSelected();
        String policyName = txt_Name.getText();
        String table = cb_Table.getSelectedItem().toString();
        if(policyName.length()==0){
            JOptionPane.showMessageDialog(this, "Pleases enter policy name");
            return;
        }
        if(!insert && !select && !update && !delete){
            JOptionPane.showMessageDialog(this, "Please choose condition!");
        } else {
            String conditions = "";
            if(select){
                if(conditions.length()==0){
                    conditions+="SELECT";
                } else {
                    conditions+=",SELECT";
                }
            }
            if(insert){
                if(conditions.length()==0){
                    conditions+="INSERT";
                } else {
                    conditions+=",INSERT";
                }
            }
            if(delete){
                if(conditions.length()==0){
                    conditions+="DELETE";
                } else {
                    conditions+=",DELETE";
                }
            }
            if(update){
                if(conditions.length()==0){
                    conditions+="UPDATE";
                } else {
                    conditions+=",UPDATE";
                }
            }
            
            boolean success = policy.CreatePolicy(policyName, conditions, table);
            if(success){
                JOptionPane.showMessageDialog(this, "Policy created");
                loadPolicy(rs);
            } else {
                JOptionPane.showMessageDialog(this, "Failed to create policy");
            }
        }
    }//GEN-LAST:event_btn_CreateActionPerformed

    private void btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeleteActionPerformed
        // TODO add your handling code here:
        String policyName = txt_Name.getText();
        boolean success = policy.Remove(policyName);
        if(success){
            JOptionPane.showMessageDialog(this, "Successfully deleted");
            loadPolicy(rs);
        } else {
            JOptionPane.showMessageDialog(this, "Failed to delete");
        }
    }//GEN-LAST:event_btn_DeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Apply;
    private javax.swing.JButton btn_Create;
    private javax.swing.JButton btn_Delete;
    private javax.swing.JButton btn_Unapply;
    private javax.swing.JCheckBox cb_Delete;
    private javax.swing.JCheckBox cb_Insert;
    private javax.swing.JCheckBox cb_Select;
    private javax.swing.JComboBox<String> cb_Table;
    private javax.swing.JComboBox<String> cb_Type;
    private javax.swing.JCheckBox cb_Update;
    private javax.swing.JComboBox<String> cb_Username;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_Policy;
    private javax.swing.JTextField txt_Name;
    // End of variables declaration//GEN-END:variables
}
