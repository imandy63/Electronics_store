/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Oracle;

import dbs.oracleConnection;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import query.OracleSysQuery;
import utils.tableHandler;
import query.TableQuery;
import query.TablespaceQuery;
/**
 *
 * @author Khang
 */
public class Tablespace extends javax.swing.JPanel {
    oracleConnection conn = new oracleConnection().getInstance();
    TablespaceQuery tsq = new TablespaceQuery();
    ResultSet rs;
    /**
     * Creates new form tablespace
     */
    public Tablespace() {
        initComponents();
        initial();
    }
    
    void initial(){
        cb_Target.addItem("Tablespace");
        cb_Target.addItem("Datafile");
        rad_On.setSelected(true);
    }

    void loadData(){
        try{
            DefaultTableModel model = tableHandler.buildTableModel(rs);
            table_Datafiles.setModel(model);
        } catch(SQLException err){
            JOptionPane.showMessageDialog(this, "Cannot load data");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table_Datafiles = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txt_Tablespace = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_FileName = new javax.swing.JTextField();
        txt_Size = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rad_On = new javax.swing.JRadioButton();
        rad_Off = new javax.swing.JRadioButton();
        label_Maxsize = new javax.swing.JLabel();
        txt_Maxsize = new javax.swing.JTextField();
        btn_Create = new javax.swing.JButton();
        btn_Add = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_User = new javax.swing.JTextField();
        btn_Find = new javax.swing.JButton();
        btn_Drop = new javax.swing.JButton();
        cb_Target = new javax.swing.JComboBox<>();
        btn_FileChooser = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btn_FilePath = new javax.swing.JButton();
        label_Path = new javax.swing.JLabel();

        table_Datafiles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table_Datafiles);

        jLabel1.setText("Tablespace:");

        txt_Tablespace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_TablespaceActionPerformed(evt);
            }
        });

        jLabel2.setText("File Name:");

        txt_FileName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_FileNameActionPerformed(evt);
            }
        });

        jLabel3.setText("Size:");

        jLabel4.setText("Autoextend:");

        rad_On.setText("ON");
        rad_On.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rad_OnActionPerformed(evt);
            }
        });

        rad_Off.setText("OFF");
        rad_Off.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rad_OffActionPerformed(evt);
            }
        });

        label_Maxsize.setText("Maxsize:");

        btn_Create.setText("CREATE");
        btn_Create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CreateActionPerformed(evt);
            }
        });

        btn_Add.setText("ADD DATA FILE");
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setText("TABLESPACE");

        jLabel7.setText("User:");

        btn_Find.setText("FIND");
        btn_Find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_FindActionPerformed(evt);
            }
        });

        btn_Drop.setText("DROP");
        btn_Drop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DropActionPerformed(evt);
            }
        });

        cb_Target.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_TargetActionPerformed(evt);
            }
        });

        btn_FileChooser.setText("ADD BY FILE CHOOSER");
        btn_FileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_FileChooserActionPerformed(evt);
            }
        });

        jLabel5.setText("File path:");

        btn_FilePath.setText("Choose");
        btn_FilePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_FilePathActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_Create)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Add)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Drop)
                        .addGap(18, 18, 18)
                        .addComponent(btn_FileChooser))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(10, 10, 10)
                                .addComponent(txt_User, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(232, 232, 232))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btn_Find)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                                        .addComponent(cb_Target, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_FileName)
                                .addGap(305, 305, 305))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_Tablespace, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_FilePath)
                                    .addComponent(label_Path))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label_Maxsize, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_Size, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rad_On)
                                        .addGap(51, 51, 51)
                                        .addComponent(rad_Off))
                                    .addComponent(txt_Maxsize, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(30, 30, 30)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_Tablespace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rad_On)
                    .addComponent(rad_Off)
                    .addComponent(jLabel5)
                    .addComponent(btn_FilePath))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_Maxsize)
                    .addComponent(txt_Maxsize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_Path))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_FileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_Create)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_Drop)
                        .addComponent(btn_Add)
                        .addComponent(btn_FileChooser)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_Target, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_User, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Find)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addGap(7, 7, 7))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txt_TablespaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_TablespaceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_TablespaceActionPerformed

    private void btn_FindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_FindActionPerformed
        // TODO add your handling code here:
        String user = txt_User.getText().trim();
        String target = cb_Target.getSelectedItem().toString();
        if(user.length() == 0){
            if(target == "Tablespace"){
                rs = tsq.getAllTablespaceName();
            } else {
                rs = tsq.getAllDatafile();
            }
        } else {
            if(target == "Tablespace"){
                rs = tsq.getAllTablespaceName(user);
            } else {
                rs = tsq.getAllDatafile(user);
            }
        }
        loadData();
    }//GEN-LAST:event_btn_FindActionPerformed

    private void txt_FileNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_FileNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_FileNameActionPerformed

    private void cb_TargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_TargetActionPerformed
        // TODO add your handling code here:
        String target = cb_Target.getSelectedItem().toString();
        if(target == "Tablespace"){
            rs = tsq.getAllTablespaceName();
        } else {
            rs = tsq.getAllDatafile();
        }
        loadData();
    }//GEN-LAST:event_cb_TargetActionPerformed

    private void btn_DropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DropActionPerformed
        // TODO add your handling code here:
        if(table_Datafiles.getSelectedRow() < 0){
            JOptionPane.showMessageDialog(this, "Not selected");
            return;
        }
        int choice = JOptionPane.showConfirmDialog(null, "Delete ?", "Delete this ?", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            String target = cb_Target.getSelectedItem().toString();
            boolean success;
            if(target == "Tablespace"){
                
                int deleteOption = JOptionPane.showConfirmDialog(null, "Including contents and files ?", "Warning ?", JOptionPane.YES_NO_OPTION);

                String tableSpaceName = table_Datafiles.getValueAt(table_Datafiles.getSelectedRow(), 0).toString();
                if(deleteOption == JOptionPane.YES_OPTION){
                    success = tsq.dropTablespaceDatafile(tableSpaceName);
                } else {
                    success = tsq.dropTablespace(tableSpaceName);
                }
            } else {
                String datafile = table_Datafiles.getValueAt(table_Datafiles.getSelectedRow(), 1).toString();
                success = tsq.dropDatafile(datafile);
            }
            if(success){
                JOptionPane.showMessageDialog(null, "Success!");
            } else {
                JOptionPane.showMessageDialog(null, "Fail!");
            }
            loadData();
        }
    }//GEN-LAST:event_btn_DropActionPerformed

    private void btn_CreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CreateActionPerformed
        // TODO add your handling code here:
        String tablespace = txt_Tablespace.getText().trim();
        String fileName = txt_FileName.getText().trim();
        String path = label_Path.getText();
        String size = txt_Size.getText().trim();
        if(tablespace.length() == 0 || fileName.length() == 0 || path.length() == 0){
            JOptionPane.showMessageDialog(this, "Fields must be filled");
            return;
        }
        boolean success;
        if(size.length() == 0){
            success = tsq.addTablespace(tablespace, path + "\\" + fileName);
        } else if(rad_On.isSelected()){
            String Maxsize = txt_Maxsize.getText().trim();
            if(Maxsize.length() == 0){
                JOptionPane.showMessageDialog(this, "All fields must be filled");
                return;
            }
            success = tsq.createTablespace(tablespace, size, path + "\\" + fileName, Maxsize);
        } else {
            success = tsq.createTablespace(tablespace, size, path + "\\" + fileName);
        }
        if(success){
            JOptionPane.showMessageDialog(this, "Success");
        } else {
            JOptionPane.showMessageDialog(this, "Fail");
        }
        loadData();
    }//GEN-LAST:event_btn_CreateActionPerformed

    private void rad_OnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rad_OnActionPerformed
        // TODO add your handling code here:
        rad_Off.setSelected(false);
        rad_On.setSelected(true);
        txt_Maxsize.setVisible(true);
        label_Maxsize.setVisible(true);
    }//GEN-LAST:event_rad_OnActionPerformed

    private void rad_OffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rad_OffActionPerformed
        // TODO add your handling code here:
        rad_On.setSelected(false);
        rad_Off.setSelected(true);
        txt_Maxsize.setVisible(false);
        label_Maxsize.setVisible(false);
    }//GEN-LAST:event_rad_OffActionPerformed

    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed
        // TODO add your handling code here:
        if(table_Datafiles.getSelectedRow() < 0){
            JOptionPane.showMessageDialog(this, "Not selected");
            return;
        } else {
            String target = cb_Target.getSelectedItem().toString();
            String tablespace;
            if(target == "Tablespace"){
                tablespace = table_Datafiles.getValueAt(table_Datafiles.getSelectedRow(), 0).toString();
            } else {
                tablespace = table_Datafiles.getValueAt(table_Datafiles.getSelectedRow(), 2).toString();                
            }
            String fileName = txt_FileName.getText().trim();
            String path = label_Path.getText();
            String size = txt_Size.getText().trim();
            if( path.length() == 0 || fileName.length() == 0){
                JOptionPane.showMessageDialog(this, "Path, file fields must be filled");
                return;
            }
            boolean success;
            if(size.length() == 0){
                success = tsq.addDatafile(tablespace, path + "\\" + fileName);
            } else if(rad_On.isSelected()){
                String Maxsize = txt_Maxsize.getText().trim();
                if(Maxsize.length() == 0){
                    JOptionPane.showMessageDialog(this, "Maxsize fields must be filled");
                    return;
                }
                success = tsq.addDatafile(tablespace, size, path + "\\" + fileName, Maxsize);
            } else {
                success = tsq.addDatafile(tablespace, size, path + "\\" + fileName);
            }
            if(success){
                JOptionPane.showMessageDialog(this, "Success");
            } else {
                JOptionPane.showMessageDialog(this, "Fail");
            }
            loadData();
        }
    }//GEN-LAST:event_btn_AddActionPerformed

    private void btn_FileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_FileChooserActionPerformed
        // TODO add your handling code here:
        if(table_Datafiles.getSelectedRow() < 0){
            JOptionPane.showMessageDialog(this, "Not selected");
            return;
        } else {
            
            JFileChooser fileChooser = new JFileChooser();
        
            // FILE
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Text files", "dbf", "csv");
            fileChooser.setMultiSelectionEnabled(true);
            fileChooser.setFileFilter(filter);

            int result = fileChooser.showOpenDialog(null);

            if (result == JFileChooser.APPROVE_OPTION) {
                String target = cb_Target.getSelectedItem().toString();
                String tablespace;
                if(target == "Tablespace"){
                    tablespace = table_Datafiles.getValueAt(table_Datafiles.getSelectedRow(), 0).toString();
                } else {
                    tablespace = table_Datafiles.getValueAt(table_Datafiles.getSelectedRow(), 2).toString();                
                }
                
                File[] selectedFiles = fileChooser.getSelectedFiles();
                for(File file: selectedFiles){
                    String filePath = file.getAbsolutePath();


                    boolean success;
                    success = tsq.addDatafile(tablespace, filePath);
                    if(!success){
                        JOptionPane.showMessageDialog(this, "File error:" + filePath);
                    }
                }
                
                loadData();
            }
        }
    }//GEN-LAST:event_btn_FileChooserActionPerformed

    private void btn_FilePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_FilePathActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        fileChooser.setDialogTitle("Select a folder");
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        int returnValue = fileChooser.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            String selectedFolderPath = fileChooser.getSelectedFile().getAbsolutePath();
            label_Path.setText(selectedFolderPath);
        }
    }//GEN-LAST:event_btn_FilePathActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_Create;
    private javax.swing.JButton btn_Drop;
    private javax.swing.JButton btn_FileChooser;
    private javax.swing.JButton btn_FilePath;
    private javax.swing.JButton btn_Find;
    private javax.swing.JComboBox<String> cb_Target;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_Maxsize;
    private javax.swing.JLabel label_Path;
    private javax.swing.JRadioButton rad_Off;
    private javax.swing.JRadioButton rad_On;
    private javax.swing.JTable table_Datafiles;
    private javax.swing.JTextField txt_FileName;
    private javax.swing.JTextField txt_Maxsize;
    private javax.swing.JTextField txt_Size;
    private javax.swing.JTextField txt_Tablespace;
    private javax.swing.JTextField txt_User;
    // End of variables declaration//GEN-END:variables
}
