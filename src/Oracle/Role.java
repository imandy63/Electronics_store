/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Oracle;

import javax.swing.table.DefaultTableModel;
import utils.tableHandler;
import query.RoleQuery;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author kongh
 */
public class Role extends javax.swing.JPanel {
    RoleQuery rq = new RoleQuery();
    boolean sysPriv = false;
    /**
     * Creates new form Role
     */
    public Role() {
        initComponents();
        initial();
    }
    
    public void initial(){
        loadRole();
        cb_Type.addItem("Boss's privs");
        cb_Type.addItem("System");
    }
    
    public void loadRole(){
        try{
            ResultSet rs = rq.GetRole();
            DefaultTableModel model = tableHandler.buildTableModel(rs);
            table_Roles.setModel(model);
        } catch(SQLException Err){
            JOptionPane.showMessageDialog(this, "Lack of privs or statement hasn't been created");
        }
    }
    
    private void loadUnavailablePrivs(String role){
        try{
            ResultSet rs = rq.GetUnavailablePrivs(role);
            DefaultTableModel model = tableHandler.buildTableModel(rs);
            table_XPrivs.setModel(model);
        } catch(SQLException Err){
            JOptionPane.showMessageDialog(this, "Lack of privs or statement hasn't been created");
        }
    }
    
    private void loadUnavailableSysPrivs(String role){
        try{
            ResultSet rs = rq.GetUnavailableSysPrivs(role);
            DefaultTableModel model = tableHandler.buildTableModel(rs);
            table_XPrivs.setModel(model);
        } catch(SQLException Err){
            JOptionPane.showMessageDialog(this, "Lack of privs or statement hasn't been created");
        }
    }
    
    private void loadAvailablePrivs(String role){
        try{
            ResultSet rs = rq.GetAvailablePrivs(role);
            DefaultTableModel model = tableHandler.buildTableModel(rs);
            table_Privs.setModel(model);
        } catch(SQLException Err){
            JOptionPane.showMessageDialog(this, "Lack of privs or statement hasn't been created");
        }
    }
    
    private void loadAvailableSysPrivs(String role){
        try{
            ResultSet rs = rq.GetAvailableSysPrivs(role);
            DefaultTableModel model = tableHandler.buildTableModel(rs);
            table_Privs.setModel(model);
        } catch(SQLException Err){
            JOptionPane.showMessageDialog(this, "Lack of privs or statement hasn't been created");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table_Roles = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_Privs = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_XPrivs = new javax.swing.JTable();
        txt_RoleName = new javax.swing.JTextField();
        btn_Add = new javax.swing.JButton();
        btn_Delete = new javax.swing.JButton();
        btn_Grant = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btn_Revoke = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_Username = new javax.swing.JTextField();
        btn_AddRole = new javax.swing.JButton();
        btn_RevokeRole = new javax.swing.JButton();
        btn_CheckRole = new javax.swing.JButton();
        cb_Type = new javax.swing.JComboBox<>();
        btn_Load = new javax.swing.JButton();

        table_Roles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_Roles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_RolesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_Roles);

        table_Privs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(table_Privs);

        table_XPrivs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(table_XPrivs);

        btn_Add.setText("Thêm");
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });

        btn_Delete.setText("Xóa");
        btn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeleteActionPerformed(evt);
            }
        });

        btn_Grant.setText("Cấp quyền");
        btn_Grant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_GrantActionPerformed(evt);
            }
        });

        jLabel1.setText("Tên role:");

        btn_Revoke.setText("Xóa quyền");
        btn_Revoke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RevokeActionPerformed(evt);
            }
        });

        jLabel3.setText("Quyền sở hữu");

        jLabel4.setText("Tên role");

        jLabel5.setText("User:");

        btn_AddRole.setText("Add Role");
        btn_AddRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddRoleActionPerformed(evt);
            }
        });

        btn_RevokeRole.setText("Revoke Role");
        btn_RevokeRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RevokeRoleActionPerformed(evt);
            }
        });

        btn_CheckRole.setText("Check User role");
        btn_CheckRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CheckRoleActionPerformed(evt);
            }
        });

        cb_Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_TypeActionPerformed(evt);
            }
        });

        btn_Load.setText("Load");
        btn_Load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LoadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 96, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btn_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btn_Revoke))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btn_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btn_Grant))
                                .addComponent(txt_RoleName)
                                .addComponent(txt_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_AddRole)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_RevokeRole))
                            .addComponent(btn_CheckRole))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE))
                    .addComponent(jLabel3))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cb_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_Load))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cb_Type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_Load)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_RoleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_Add)
                            .addComponent(btn_Grant))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_Delete)
                            .addComponent(btn_Revoke))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_CheckRole)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_AddRole)
                            .addComponent(btn_RevokeRole))
                        .addContainerGap(123, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed
        // TODO add your handling code here:
        String roleName = txt_RoleName.getText().trim();
        if(roleName.length()==0){
            JOptionPane.showMessageDialog(this, "Role name field must be filled");
            return;
        }
        boolean success = rq.CreateRole(roleName);
        if(success){
            JOptionPane.showMessageDialog(this, "Role created");
            loadRole();
        } else {
            JOptionPane.showMessageDialog(this, "Cannot create, please check the role name again");
        }
        
    }//GEN-LAST:event_btn_AddActionPerformed

    private String getSelectedRole(){
        int index = table_Roles.getSelectedRow();
        if(index<0){
            JOptionPane.showMessageDialog(this, "Please select");
            return null;
        }
        return table_Roles.getValueAt(index, 0).toString();
    }
    
    private void btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeleteActionPerformed
        // TODO add your handling code here:
        String roleName = getSelectedRole();
        if(roleName == null){
            return;
        }        
        boolean success = rq.DeleteRole(roleName);
        if(success){
            JOptionPane.showMessageDialog(this, "Role created");
            loadRole();
        } else {
            JOptionPane.showMessageDialog(this, "Cannot create, please check the role name again");
        }
    }//GEN-LAST:event_btn_DeleteActionPerformed

    private void btn_RevokeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RevokeActionPerformed
        // TODO add your handling code here:
        String roleName = getSelectedRole();
        if(roleName == null){
            return;
        }
        int index = table_Privs.getSelectedRow();
        if(index<0){
            JOptionPane.showMessageDialog(this, "please select");
            return;
        }
        String priv = table_Privs.getValueAt(index, 0).toString();
        boolean success = rq.RevokePrivFromRole(roleName, priv);
        if(success){
            JOptionPane.showMessageDialog(this, "Revoke success");
            loadAvailablePrivs(roleName);
            loadUnavailablePrivs(roleName);
        } else {
            JOptionPane.showMessageDialog(this, "Failed to revoke");
        }
    }//GEN-LAST:event_btn_RevokeActionPerformed

    private void table_RolesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_RolesMouseClicked
        // TODO add your handling code here:
        String roleName = getSelectedRole();
        if(roleName == null){
            return;
        }
        if(sysPriv){
            loadAvailableSysPrivs(roleName);
            loadUnavailableSysPrivs(roleName);
        } else {
            loadAvailablePrivs(roleName);
            loadUnavailablePrivs(roleName);
        }
    }//GEN-LAST:event_table_RolesMouseClicked

    private void btn_GrantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_GrantActionPerformed
        // TODO add your handling code here:
        String roleName = getSelectedRole();
        if(roleName == null){
            return;
        }
        int index = table_XPrivs.getSelectedRow();
        if(index<0){
            JOptionPane.showMessageDialog(this, "please select");
            return;
        }
        String priv = table_XPrivs.getValueAt(index, 0).toString();
        boolean success = rq.GrantPrivToRole(roleName, priv);
        if(success){
            JOptionPane.showMessageDialog(this, "Grant success");
            loadAvailablePrivs(roleName);
            loadUnavailablePrivs(roleName);
        } else {
            JOptionPane.showMessageDialog(this, "Failed to grant");
        }
    }//GEN-LAST:event_btn_GrantActionPerformed

    private void btn_AddRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddRoleActionPerformed
        // TODO add your handling code here:
        String role = getSelectedRole();
        if(role == null){
            return;
        }
        String username = txt_Username.getText().trim();
        if(username.length()==0){
            JOptionPane.showMessageDialog(this, "Username field must be filled");
            return;
        }
        boolean success = rq.GrantRoleToUser(username, role);
        if(success){
            JOptionPane.showMessageDialog(this, "Grant role success");
        } else {
            JOptionPane.showMessageDialog(this, "Failed to grant role");
        }
    }//GEN-LAST:event_btn_AddRoleActionPerformed

    private void btn_RevokeRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RevokeRoleActionPerformed
        // TODO add your handling code here:
        String role = getSelectedRole();
        if(role == null){
            return;
        }
        String username = txt_Username.getText().trim();
        if(username.length()==0){
            JOptionPane.showMessageDialog(this, "Username field must be filled");
            return;
        }
        boolean success = rq.RevokeRoleFromUser(username, role);
        if(success){
            JOptionPane.showMessageDialog(this, "Grant role success");
        } else {
            JOptionPane.showMessageDialog(this, "Failed to grant role");
        }
    }//GEN-LAST:event_btn_RevokeRoleActionPerformed

    private void btn_CheckRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CheckRoleActionPerformed
        // TODO add your handling code here:
        String username = txt_Username.getText().trim();
        if(username.length() ==0){
            loadRole();
        } else {
            try{
                ResultSet rs = rq.GetRoleOfUser(username);
                DefaultTableModel model = tableHandler.buildTableModel(rs);
                table_Roles.setModel(model);
            } catch(SQLException Err){
                JOptionPane.showMessageDialog(this, "Lack of privs or username doesn't exist");
            }
        }
        
        
    }//GEN-LAST:event_btn_CheckRoleActionPerformed

    private void cb_TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_TypeActionPerformed
        // TODO add your handling code here:
        sysPriv = cb_Type.getSelectedIndex() != 0;
    }//GEN-LAST:event_cb_TypeActionPerformed

    private void btn_LoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LoadActionPerformed
        // TODO add your handling code here:
        String roleName = getSelectedRole();
        if(roleName == null){
            return;
        }
        if(sysPriv){
            loadAvailableSysPrivs(roleName);
            loadUnavailableSysPrivs(roleName);
        } else {
            loadAvailablePrivs(roleName);
            loadUnavailablePrivs(roleName);
        }
    }//GEN-LAST:event_btn_LoadActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_AddRole;
    private javax.swing.JButton btn_CheckRole;
    private javax.swing.JButton btn_Delete;
    private javax.swing.JButton btn_Grant;
    private javax.swing.JButton btn_Load;
    private javax.swing.JButton btn_Revoke;
    private javax.swing.JButton btn_RevokeRole;
    private javax.swing.JComboBox<String> cb_Type;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable table_Privs;
    private javax.swing.JTable table_Roles;
    private javax.swing.JTable table_XPrivs;
    private javax.swing.JTextField txt_RoleName;
    private javax.swing.JTextField txt_Username;
    // End of variables declaration//GEN-END:variables
}
